{"version":3,"sources":["picture-carousel.js","place-list.js","place-map.js","story-list.js","jquery/go-to.js","component/ajax/designer-edit.js","component/upload/gallery.js","component/upload/imagepreview.js","component/upload/imageuploader.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpfile":"app.js","sourcesContent":["$(function () {\n    $('#picture-carousel').flickity({\n        cellAlign: 'left',\n        freeScroll: true\n    });\n\n    $('#picture-carousel').lightGallery({\n        selector: '.picture-thumb',\n        exThumbImage: 'data-thumb',\n        thumbWidth: 100,\n        thumbContHeight: 120\n    });\n});\n"," \n","var map;\nfunction initMap() {\n  map = new google.maps.Map(document.getElementById('place-map-draw'), {\n    center: {lat: -34.397, lng: 150.644},\n    zoom: 8\n  });\n}\n\n$(function () {\n    $('#place-map-inner').affix({\n        offset: {\n            top: function () {\n                return this.top = $('#kanibar').outerHeight(true) + 20;\n            },\n            bottom: function () {\n                return this.bottom = $('footer').outerHeight(true) + 20;\n            }\n        }\n    });\n});\n","$(function () {\n\n    var $grid = $('#story-list .grid')\n\n    if ($grid.length === 0) {\n        return;\n    }\n\n    $grid.masonry({\n        itemSelector: '.grid-item', // use a separate class for itemSelector, other than .col-\n        columnWidth: '.grid-item',\n        percentPosition: true\n    });\n\n    $grid.find('.story .expand-button').click(function () {\n        $(this).parent('.story').toggleClass('expanded');\n        $(this).siblings('.content').scrollTop(0);\n        $grid.masonry();\n    });\n});\n","// A custom jQuery plugin to scroll window to specific element.\n// Useage: $('#my-div').goTo();\n\n(function($) {\n    $.fn.goTo = function() {\n        $('html, body').animate({\n            scrollTop: $(this).offset().top - 20 + 'px'\n        }, 'fast');\n        return this; // for chaining...\n    }\n})(jQuery);\n","/**\n * Control designer edit form.\n *\n * View - views/designer/edit.blade.php\n * Style - assets/sass/_edit-layout.scss\n * Script - assets/js/edit/ajax/designer-edit.js\n */\n\n$(function () {\n\n    // Page check\n    if ($('#designer-edit-page').length === 0) {\n        return;\n    }\n\n    // Initialize TinyMCE\n    tinymce.init({\n        selector: 'textarea.tinymce',\n        menubar: false,\n        content_css: '/css/app.css',\n        setup: function (editor) {\n            editor.on('change', function () {\n                editor.save();\n            });\n        }\n    });\n\n    // Initialize ImageUploaders\n    var imagePreview = new ImagePreview({\n        selector: '#image-form-group .image-preview'\n    });\n\n    var imageUploader = new ImageUploader({\n        selector: '#image-form-group .image-uploader',\n        start: function () {\n            imagePreview.progress('show');\n        },\n        progress: function (percentage) {\n            imagePreview.progress(percentage);\n        },\n        done: function (image) {\n            imagePreview.progress('hide');\n            imagePreview.image(image.id, image.url.thumb);\n        },\n        fail: function (error) {\n            imagePreview.progress('hide');\n            console.log(error);\n        }\n    });\n\n    // Submit form\n    $('button[type=\"submit\"]').click(function (e) {\n        e.preventDefault();\n\n        $.ajax({\n            method: 'PUT',\n            url: $('#designer-edit-form').attr('action'),\n            data: $('#designer-edit-form').serializeArray()\n        }).done(function () {\n            window.location.href = $('#designer-edit-form').attr('action');\n        }).fail(function (error) {\n            var response = error.responseJSON;\n            var $alert = $('#designer-edit-form .alert');\n            var message = '';\n\n            for (var id in response) {\n                message += '<p>' + response[id] + '</p>';\n            }\n\n            $alert.html(message).show().goTo();\n        });\n    });\n\n    // Country and city select, use Select2.\n    $(\"select#country-select\").select2();\n    $(\"select#city-select\").select2();\n\n    // Tag select, use Select2\n    $(\"select#tag-select\").select2({tags: true});\n});\n","/**\n * Image gallery uploader\n *\n * View - views/component/upload/gallery.blade.php\n * Style - assets/sass/_edit-layout.scss\n * Script - assets/js/edit/upload/gallery.js\n */\n\n$(function () {\n\n    $('.gallery-upload').each(function () {\n        var $button = $(this).find('button');\n        var $fileInput = $(this).find('input[type=\"file\"]');\n        var $gallery = $(this).find('.image-gallery');\n        var $imagePreviewTemplate = $($(this).find('template').prop('content')).find('.image-preview');\n\n        // Sortable\n        Sortable.create($gallery[0], {animation: 300});\n\n        // Remove image\n        $(\".image-preview span\").click(function () {\n            $(this).parent('.image-preview').remove();\n        });\n\n        // When click button, open file dialog\n        $button.click(function () {\n            $fileInput.click();\n        });\n\n        // When selected a file from file dialog, show preview and upload image\n        $fileInput.change(function () {\n            if (this.files && this.files[0] && this.files[0].name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n                var reader = new FileReader();\n\n                var $imagePreview = $imagePreviewTemplate.clone();\n                $imagePreview.find('span').click(function () {\n                    $imagePreview.remove();\n                });\n\n                reader.onload = function (e) {\n                    $imagePreview.css('background-image', 'url(' + e.target.result + ')');\n                    $imagePreview.appendTo($gallery);\n                }\n\n                reader.readAsDataURL(this.files[0]);\n\n                // TODO Upload file...\n            }\n        });\n    });\n\n});\n","var ImagePreview = function (options) {\n    this.init(options).bindEvents();\n};\n\nImagePreview.prototype.init = function (options) {\n    if (typeof options.selector === 'string') {\n        this.element = $(options.selector);\n    } else if (typeof options.element === 'string') {\n        this.element = $(options.element);\n    } else if (typeof options.element === 'object') {\n        this.element = $(options.element);\n    } else if (typeof options.template === 'string') {\n        this.element = $(options.template).clone();\n    } else if (typeof options.template === 'object') {\n        this.element = $(options.template).clone();\n    }\n\n    this.inputElement = this.element.find('input');\n    this.removeButton = this.element.find('.remove');\n    this.progressWraper = this.element.find('.progress');\n    this.progressBar = this.element.find('.progress-bar');\n    this.uploadProgress = 0;\n    this.imageId = parseInt(this.inputElement.val());\n    this.imageUrl = parseInt(this.inputElement.val());\n\n    return this;\n};\n\nImagePreview.prototype.bindEvents = function () {\n    var preview = this;\n    this.removeButton.click(function () {\n        preview.element.remove();\n    });\n\n    return this;\n};\n\nImagePreview.prototype.progress = function (progress) {\n    if (progress === 'hide') {\n        this.progressWraper.hide();\n    } else if (progress === 'show') {\n        this.progressWraper.show();\n    } else if (typeof progress === 'number') {\n        this.uploadProgress = progress;\n        this.progressBar.css('width', progress + '%');\n    }\n\n    return this.uploadProgress;\n};\n\nImagePreview.prototype.image = function (id, url) {\n    this.imageId = id;\n    this.imageUrl = url;\n    this.element.css('background-image', 'url(\"' + url + '\")');\n    this.inputElement.val(id);\n\n    return {id: this.imageId, url: this.imageUrl};\n};\n","/**\n * UI for uploading new images and choosing uploaded images\n *\n * View - views/component/input/imageuploader.blade.php\n * Style - assets/sass/_edit-layout.scss\n * Script - assets/js/edit/input/upload/image.js\n */\nvar ImageUploader = function (options) {\n\n    this.init(options);\n\n    this.bindEvents();\n\n    return this;\n};\n\n/**\n * Read options and setup object properties.\n *\n * [Options]\n * selector: string\n * element: string | jQuery | DOM\n * start: function\n *      When file uploading started, call this function.\n * done: function\n *      When file uploading finished or chosen, call this function.\n * fail: function\n *      When error occured, call this function.\n * multiple: boolean\n *      If the modal can choose multiple images, default value is false.\n */\nImageUploader.prototype.init = function (options) {\n\n    if (typeof options === 'object') {\n        // 'selector' or 'element' option to bind view.\n        if (typeof options.selector === 'string') {\n            this.element = $(options.selector);\n        } else if (typeof options.element === 'string') {\n            this.element = $(options.element);\n        } else if (typeof options.element === 'object') {\n            this.element = $(options.element);\n        }\n\n        // Callback functions\n        if (typeof options.start === 'function') {\n            this.start = options.start;\n        } else {\n            this.start = function () {};\n        }\n\n        if (typeof options.progress === 'function') {\n            this.progress = options.progress;\n        } else {\n            this.start = function () {};\n        }\n\n        if (typeof options.done === 'function') {\n            this.done = options.done;\n        } else {\n            this.done = function () {};\n        }\n\n        if (typeof options.fail === 'function') {\n            this.fail = options.fail;\n        } else {\n            this.fail = function () {};\n        }\n\n        if (typeof options.multiple === 'boolean') {\n            this.multiple = options.multiple;\n        } else {\n            this.multiple = false;\n        }\n    } else {\n        return null;\n    }\n\n    this.uploadButton = this.element.find('button.upload-button');\n    this.chooseButton = this.element.find('button.choose-button');\n    this.fileInput = this.element.find('input[type=\"file\"]');\n    this.chooseModal = this.element.find('div.modal').modal('hide');\n\n    return this;\n};\n\n/**\n * Initialize user interaction events.\n */\nImageUploader.prototype.bindEvents = function () {\n\n    var uploader = this;\n\n    this.uploadButton.click(function () {\n        uploader.fileInput.click();\n    });\n\n    // When selected a file from file dialog, show preview and upload image\n    this.fileInput.change(function () {\n        uploader.start(); // Callback function\n\n        for (var i = 0; i < this.files.length; i++) {\n            var file = this.files[i];\n\n            if (!file.type.match('image.*')) {\n                continue;\n            }\n\n            if (!file.name.match(/\\.(jpg|jpeg|png|gif)$/)) {\n                continue;\n            }\n\n            var data = new FormData();\n            data.append('_token', csrfToken);\n            data.append('image', file);\n\n            // Upload file...\n            $.ajax({\n                method: 'POST',\n                url: '/image',\n                data: data,\n                processData: false,\n                contentType: false,\n                dataType: 'json',\n                xhr: function() {\n                    var xhr = new window.XMLHttpRequest();\n\n                    xhr.upload.addEventListener(\"progress\", function(evt) {\n                        if (evt.lengthComputable) {\n                            var percentComplete = evt.loaded / evt.total;\n                            percentComplete = parseInt(percentComplete * 100);\n                            uploader.progress(percentComplete); // Callback function\n                        }\n                    }, false);\n\n                    return xhr;\n                }\n            }).done(function (response) {\n                var image = response;\n                uploader.done(image); // Callback function\n            }).fail(function (response) {\n                var error = response;\n                uploader.fail(error); // Callback function\n            });\n\n            // If it is not multiple image uploader, only upload the first one.\n            if (!uploader.multiple) {\n                break;\n            }\n        }\n    });\n\n    this.chooseButton.click(function () {\n        uploader.chooseModal.modal('show');\n    });\n};\n"],"sourceRoot":"/source/"}